[main]
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter

authc.loginUrl = /Registro.xhtml
authc.successUrl = /index.xhtml
roles.unauthorizedUrl = /unauthorized.xhtml

ssl.enabled = false

#jdbcrealm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm 
jdbcRealm.permissionsLookupEnabled = true 
jdbcRealm.authenticationQuery = select rp.Clave as ro_contrasena from Persona as pe left join Rol_Persona as rp on pe.DocumentoID=rp.DocumentoID left join Roles as r on r.RolID=rp.Roles_rol where pe.DocumentoID=?

jdbcRealm.userRolesQuery = select r.Nombre as ro_Rol_rol from Persona as pe left join Rol_Persona as rp on pe.DocumentoID=rp.DocumentoID left join Roles as r on r.RolID=rp.Roles_rol where pe.DocumentoID=?

#If you have a per-role permissions table, add the query here.
#Given that in this example there are no per-role-permissions, the
#role name is privided
jdbcRealm.permissionsQuery = select r.Nombre as ro_Rol_rol from Persona as pe left join Rol_Persona as rp on pe.DocumentoID=rp.DocumentoID left join Roles as r on r.RolID=rp.Roles_rol where pe.DocumentoID=?


builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager


#hashing and salting
hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 500000
hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true

# privateSalt needs to be base64-encoded in shiro.ini but not in the Java code
# To generate the base64-encoded salt, use :https://www.base64encode.org/

hashService.privateSalt = bXlwcml2YXRlc2FsdA==
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher

passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService
passwordMatcher.passwordService = $passwordService

jdbcRealm.credentialsMatcher = $passwordMatcher

#jdbcrealm datasource
ds = com.jolbox.bonecp.BoneCPDataSource 
ds.driverClass=com.mysql.jdbc.Driver 
ds.jdbcUrl=jdbc:mysql://localhost:3306/pdswgr2
ds.username = pdswgr2
ds.password = pdswg202
jdbcRealm.dataSource=$ds 

securityManager.realms = $jdbcRealm



# Filter Setup
[urls]

/javax.faces.resource/** = anon 

/Registro.xhtml = authc

/logout = logout

/Admin/** = authc, roles[Administrador]
/Estudiante/** = authc, roles[Estudiante]
/Egresado/** = authc, roles[Egresado]

/open/** = anon

/** = anon
